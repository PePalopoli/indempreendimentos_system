{% extends 'security/empreendimentos/theme.twig' %}

{% block stylesheet %}
	{{ parent() }}
	<link rel="stylesheet" href="{{ asset('dist/css/adminlte.min.css') }}">
	<!-- Summernote -->
	<link rel="stylesheet" href="{{ asset('plugins/summernote/summernote-bs4.min.css') }}">
	<!-- Select2 -->
	<link rel="stylesheet" href="{{ asset('plugins/select2/css/select2.min.css') }}">
	<link rel="stylesheet" href="{{ asset('plugins/select2-bootstrap4-theme/select2-bootstrap4.min.css') }}">
	
	<style>
		/* Estilos para galeria de imagens */
		.marked-for-removal {
			position: relative;
		}
		
		.marked-for-removal::before {
			content: '';
			position: absolute;
			top: 0;
			left: 0;
			right: 0;
			bottom: 0;
			background-color: rgba(220, 53, 69, 0.1);
			border: 2px dashed #dc3545;
			border-radius: 0.25rem;
			z-index: 1;
		}
		
		.card-body .text-danger {
			z-index: 2;
			position: relative;
			background-color: rgba(255, 255, 255, 0.9);
			padding: 2px 5px;
			border-radius: 3px;
			margin-top: 5px;
		}
		
		/* Efeito hover para imagens */
		.card img:hover {
			transform: scale(1.02);
			transition: transform 0.2s ease-in-out;
		}
		
		/* Drag and drop area */
		.border-primary.bg-light {
			border-style: dashed !important;
			border-width: 2px !important;
		}
		
		/* Preview container */
		#preview-container {
			border: 1px solid #dee2e6;
			border-radius: 0.375rem;
			padding: 15px;
			background-color: #f8f9fa;
		}
		
		/* Loading states */
		.btn:disabled {
			opacity: 0.6;
		}
		
		/* Contador de imagens */
		.image-counter {
			background-color: #17a2b8;
			color: white;
			padding: 2px 8px;
			border-radius: 12px;
			font-size: 0.875rem;
			font-weight: bold;
		}
		
		/* Botão de remoção de imagem */
		.btn-remove-image {
			opacity: 0.8;
			transition: opacity 0.2s ease-in-out;
			border-radius: 50%;
			width: 30px;
			height: 30px;
			display: flex;
			align-items: center;
			justify-content: center;
			box-shadow: 0 2px 4px rgba(0,0,0,0.3);
		}
		
		.btn-remove-image:hover {
			opacity: 1;
			transform: scale(1.1);
		}
		
		/* Container da imagem com hover */
		.position-relative:hover .btn-remove-image {
			opacity: 1;
		}
		
		/* Badge contador */
		.badge-info {
			background-color: #17a2b8;
		}
	</style>
{% endblock %}

{% block content %}

	{% block form_title %}{% endblock form_title %}

	<!-- Adicionar no início do formulário -->
	<div class="alert alert-info">
		<i class="fas fa-info-circle"></i>
		<strong>Limite de upload:</strong>
		Tamanho máximo permitido:
		<?php echo ini_get('upload_max_filesize'); ?>
	</div>

	<!-- Main content -->
	<section class="content">
		<div class="container-fluid">

			{{ form_start(form, {'attr': {'enctype': 'multipart/form-data'}}) }}

			<div class="row">
				<div
					class="col-md-8">
					<!-- Dados Básicos -->
					<div class="card card-info">
						<div class="card-header">
							<h3 class="card-title">Dados Básicos do Empreendimento</h3>
							<div class="card-tools">
								<button type="button" class="btn btn-tool" data-card-widget="collapse">
									<i class="fas fa-minus"></i>
								</button>
							</div>
						</div>
						<div class="card-body">
							<div class="row">
								<div class="col-md-6">
									<div class="form-group">
										{{ form_label(form.nome) }}
										{{ form_errors(form.nome) }}
										{{ form_widget(form.nome, { attr: { 'class': 'form-control' }}) }}
									</div>
								</div>

								<div class="col-md-6">
									<div class="form-group">
										{{ form_label(form.cidade_estado) }}
										{{ form_errors(form.cidade_estado) }}
										{{ form_widget(form.cidade_estado, { attr: { 'class': 'form-control' }}) }}
									</div>
								</div>
							</div>

							<div class="row">


								<div class="form-group col-md-6">
									{{ form_label(form.etapa_id) }}
									{{ form_errors(form.etapa_id) }}
									{{ form_widget(form.etapa_id, { attr: { 'class': 'form-control select2' }}) }}
								</div>


								<div class="form-group col-md-6">
									{{ form_label(form.slug) }}
									{{ form_errors(form.slug) }}
									{{ form_widget(form.slug, { attr: { 'class': 'form-control' }}) }}
									<small class="form-text text-muted">URL amigável (será gerada automaticamente se deixar em branco)</small>
								</div>
							</div>

							<div class="form-group">
								{{ form_label(form.descricao) }}
								{{ form_errors(form.descricao) }}
								{{ form_widget(form.descricao, { attr: { 'class': 'form-control editor-content' }}) }}
							</div>
						</div>
					</div>

					<!-- SEO -->
					<div class="card card-secondary">
						<div class="card-header">
							<h3 class="card-title">SEO</h3>
							<div class="card-tools">
								<button type="button" class="btn btn-tool" data-card-widget="collapse">
									<i class="fas fa-minus"></i>
								</button>
							</div>
						</div>
						<div class="card-body">
							<div class="form-group">
								{{ form_label(form.meta_title) }}
								{{ form_errors(form.meta_title) }}
								{{ form_widget(form.meta_title, { attr: { 'class': 'form-control' }}) }}
								<div class="text-muted small">
									<span id="meta-title-count">0</span>/160 caracteres
								</div>
							</div>

							<div class="form-group">
								{{ form_label(form.meta_description) }}
								{{ form_errors(form.meta_description) }}
								{{ form_widget(form.meta_description, { attr: { 'class': 'form-control' }}) }}
								<div class="text-muted small">
									<span id="meta-desc-count">0</span>/255 caracteres
								</div>
							</div>

							<div class="form-group">
								{{ form_label(form.meta_keywords) }}
								{{ form_errors(form.meta_keywords) }}
								{{ form_widget(form.meta_keywords, { attr: { 'class': 'form-control' }}) }}
							</div>
						</div>
					</div>
				</div>

				<div
					class="col-md-4">
					<!-- Status e Configurações -->
					<div class="card card-primary">
						<div class="card-header">
							<h3 class="card-title">Status e Configurações</h3>
						</div>
						<div class="card-body">
							<div class="form-group">
								{{ form_label(form.enabled) }}
								{{ form_errors(form.enabled) }}
								{{ form_widget(form.enabled, { attr: { 'class': 'form-control select2' }}) }}
							</div>

							<div class="form-group">
								{{ form_label(form.destaque) }}
								<div class="form-check">
									{{ form_widget(form.destaque) }}
									{{ form_label(form.destaque, 'Empreendimento em destaque', {'label_attr': {'class': 'form-check-label'}}) }}
								</div>
							</div>
						</div>
					</div>

					<!-- Imagens -->
					<div class="card card-warning">
						<div class="card-header">
							<h3 class="card-title">Imagens</h3>
						</div>
						<div class="card-body">
							<div class="form-group">
								{{ form_label(form.logo_empreendimento) }}
								{{ form_errors(form.logo_empreendimento) }}
								{{ form_widget(form.logo_empreendimento, { attr: { 'class': 'form-control' }}) }}
								<small class="form-text text-muted">Logo do empreendimento</small>
							</div>

							<div class="form-group">
								{{ form_label(form.img_capa) }}
								{{ form_errors(form.img_capa) }}
								{{ form_widget(form.img_capa, { attr: { 'class': 'form-control' }}) }}
								<small class="form-text text-muted">Imagem principal de capa</small>
							</div>
						</div>
					</div>
				</div>
			</div>

			<!-- NOVA SEÇÃO: GALERIA DE IMAGENS -->
			<div class="card card-info">
				<div class="card-header">
					<h3 class="card-title">
						<i class="fas fa-images"></i>
						Galeria de Imagens
					</h3>
					<div class="card-tools">
						<button type="button" class="btn btn-tool" data-card-widget="collapse">
							<i class="fas fa-minus"></i>
						</button>
					</div>
				</div>
				<div class="card-body">
					<!-- Upload múltiplo de novas imagens -->
					<div class="form-group">
						{{ form_label(form.galeria_imagens) }}
						{{ form_errors(form.galeria_imagens) }}
						{{ form_widget(form.galeria_imagens, { 
							attr: { 
								'class': 'form-control-file',
								'multiple': true,
								'accept': 'image/*',
								'id': 'galeria_imagens_input'
							}
						}) }}
						<small class="form-text text-muted">
							<i class="fas fa-info-circle"></i>
							<strong>Limites:</strong> Máximo 20 arquivos, 10MB cada, 80MB total. Formatos: JPG, PNG, GIF, WEBP
						</small>
					</div>

					<!-- Preview das novas imagens selecionadas -->
					<div id="preview-container" class="mt-3" style="display: none;">
						<h6><i class="fas fa-eye"></i> Prévia das novas imagens:</h6>
						<div id="preview-images" class="row"></div>
					</div>

					{% if galeria_existente is defined and galeria_existente|length > 0 %}
					<!-- Galeria existente (apenas na edição) -->
					<div class="mt-4">
						<h6><i class="fas fa-folder-open"></i> Imagens atuais na galeria ({{ galeria_existente|length }}):</h6>
						<div class="row">
							{% for imagem in galeria_existente %}
							<div class="col-md-4 col-sm-6 mb-3" id="galeria-item-{{ imagem.id }}">
								<div class="card">
									<img src="{{path('imagem',{'path':'empreendimentos_galeria',imagem:imagem.imagem})}}" 
										 class="card-img-top" 
										 style="height: 150px; object-fit: cover; cursor: pointer;"
										 alt="{{ imagem.titulo }}"
										 data-toggle="modal" 
										 data-target="#imageModal"
										 data-src="{{path('imagem',{'path':'empreendimentos_galeria',imagem:imagem.imagem})}}">
									<div class="card-body p-2">
										<p class="card-text small mb-1">
											<strong>{{ imagem.titulo }}</strong>
										</p>
										<p class="card-text small text-muted mb-2">
											Tipo: {{ imagem.tipo|capitalize }}
										</p>
										<button type="button" 
												class="btn btn-danger btn-sm btn-block btn-mark-remove" 
												data-image-id="{{ imagem.id }}"
												data-titulo="{{ imagem.titulo }}">
											<i class="fas fa-trash"></i> Remover
										</button>
									</div>
								</div>
							</div>
							{% endfor %}
						</div>
					</div>
					{% endif %}
				</div>
			</div>
		</div>

		<!-- Modal para visualizar imagem -->
		<div class="modal fade" id="imageModal" tabindex="-1">
			<div class="modal-dialog modal-lg">
				<div class="modal-content">
					<div class="modal-header">
						<h5 class="modal-title">Visualizar Imagem</h5>
						<button type="button" class="close" data-dismiss="modal">
							<span>&times;</span>
						</button>
					</div>
					<div class="modal-body text-center">
						<img id="modalImage" src="" class="img-fluid" alt="Imagem">
					</div>
				</div>
			</div>
		</div>

			<!-- SEÇÃO: BENEFÍCIOS DO EMPREENDIMENTO -->
			<div class="card card-success">
				<div class="card-header">
					<h3 class="card-title">
						<i class="fas fa-star"></i>
						Benefícios do Empreendimento
					</h3>
					<div class="card-tools">
						<button type="button" class="btn btn-tool" data-card-widget="collapse">
							<i class="fas fa-minus"></i>
						</button>
					</div>
				</div>
				<div class="card-body">
					<div class="row">
						<div class="col-md-8">
							<!-- Formulário para adicionar benefício -->
							<div class="border p-3 mb-3" style="border-radius: 8px; background-color: #f8f9fa;">
								<h5><i class="fas fa-plus-circle text-success"></i> Adicionar Benefício</h5>
								<div class="row">
									<div class="col-md-6">
										<div class="form-group">
											<label for="beneficio_select">Benefício</label>
											<select id="beneficio_select" class="form-control">
												<option value="">Selecione um benefício...</option>
												{% for beneficio in beneficios_disponiveis %}
													<option value="{{ beneficio.id }}" data-titulo="{{ beneficio.titulo }}" data-svg="{{ beneficio.svg_code|e('html_attr') }}">
														{{ beneficio.titulo }}
													</option>
												{% endfor %}
											</select>
										</div>
									</div>
									<div class="col-md-6">
										<div class="form-group">
											<label for="valor_personalizado">Valor Personalizado</label>
											<input type="text" id="valor_personalizado" class="form-control" maxlength="120" placeholder="Ex: A partir de R$ 250.000">
											<small class="form-text text-muted">Máximo 120 caracteres</small>
										</div>
									</div>
								</div>
								<div class="row">
									<div class="col-md-6">
										<div class="form-group">
											<label for="cor_beneficio">Cor do Ícone</label>
											<div class="row">
												<div class="col-6">
													<input type="color" id="cor_beneficio" class="form-control" value="#000000" title="Seletor de cor">
												</div>
												<div class="col-6">
													<div class="input-group">
														<div class="input-group-prepend">
															<span class="input-group-text">#</span>
														</div>
														<input type="text" id="cor_hex_input" class="form-control" value="000000" 
															   maxlength="6" placeholder="000000" 
															   pattern="[0-9A-Fa-f]{6}" 
															   title="Digite o código hexadecimal (6 caracteres)">
													</div>
												</div>
											</div>
											<small class="form-text text-muted">Use o seletor de cor ou digite o código hexadecimal</small>
										</div>
									</div>
									<div class="col-md-6">
										<div class="form-group">
											<label>&nbsp;</label>
											<div>
												<button type="button" id="btn_adicionar_beneficio" class="btn btn-success btn-block">
													<i class="fas fa-plus"></i> Adicionar Benefício
												</button>
											</div>
										</div>
									</div>
								</div>
							</div>
						</div>
						<div class="col-md-4">
							<!-- Preview do benefício selecionado -->
							<div class="border p-3" style="border-radius: 8px; background-color: #e9ecef;">
								<h6><i class="fas fa-eye"></i> Preview</h6>
								<div id="beneficio_preview" class="text-center" style="min-height: 100px; display: flex; align-items: center; justify-content: center;">
									<span class="text-muted">
										<i class="fas fa-star fa-2x"></i>
										<br><small>Selecione um benefício</small>
									</span>
								</div>
							</div>
						</div>
					</div>

					<!-- Lista de benefícios adicionados -->
					<div class="mt-4">
						<h5><i class="fas fa-list"></i> Benefícios Adicionados</h5>
						<div id="beneficios_lista" class="row">
							<!-- Benefícios existentes (em edição) -->
							{% if beneficios_selecionados is defined and beneficios_selecionados|length > 0 %}
								{% for beneficio in beneficios_selecionados %}
									<div class="col-md-6 mb-3 beneficio-item" data-id="{{ beneficio.id }}">
										<div class="card">
											<div class="card-body p-3">
												<div class="row align-items-center">
													<div class="col-2 text-center">
														<div style="width: 40px; height: 40px; display: inline-flex; align-items: center; justify-content: center; color: {{ beneficio.cor_hex }};">
															{{ beneficio.svg_code|raw }}
														</div>
													</div>
													<div class="col-7">
														<h6 class="mb-1">{{ beneficio.titulo }}</h6>
														{% if beneficio.valor_personalizado %}
															<small class="text-muted">{{ beneficio.valor_personalizado }}</small>
														{% endif %}
													</div>
													<div class="col-3 text-right">
														<button type="button" class="btn btn-sm btn-danger btn-remover-beneficio" data-id="{{ beneficio.id }}">
															<i class="fas fa-times"></i>
														</button>
													</div>
												</div>
											</div>
										</div>
									</div>
								{% endfor %}
							{% endif %}
						</div>
						<div id="beneficios_empty" class="text-center text-muted" {% if beneficios_selecionados is defined and beneficios_selecionados|length > 0 %}style="display: none;"{% endif %}>
							<i class="fas fa-info-circle fa-2x mb-3"></i>
							<br>Nenhum benefício adicionado ainda
						</div>
					</div>
				</div>
			</div>

			<!-- SEÇÃO: BOTÕES DE TOUR -->
			<div class="card card-warning">
				<div class="card-header">
					<h3 class="card-title">
						<i class="fas fa-mouse-pointer"></i>
						Botões de Tour Virtual
					</h3>
					<div class="card-tools">
						<button type="button" class="btn btn-tool" data-card-widget="collapse">
							<i class="fas fa-minus"></i>
						</button>
					</div>
				</div>
				<div class="card-body">
					<div class="row">
						<div class="col-md-8">
							<!-- Formulário para adicionar botão -->
							<div class="border p-3 mb-3" style="border-radius: 8px; background-color: #fff3cd;">
								<h5><i class="fas fa-plus-circle text-warning"></i> Adicionar Botão de Tour</h5>
								<div class="row">
									<div class="col-md-6">
										<div class="form-group">
											<label for="texto_botao">Texto do Botão</label>
											<input type="text" id="texto_botao" class="form-control" maxlength="100" placeholder="Ex: Tour Virtual 360°">
											<small class="form-text text-muted">Máximo 100 caracteres</small>
										</div>
									</div>
									<div class="col-md-6">
										<div class="form-group">
											<label for="url_destino">URL de Destino</label>
											<input type="url" id="url_destino" class="form-control" maxlength="500" placeholder="https://exemplo.com/tour">
											<small class="form-text text-muted">URL completa com http:// ou https://</small>
										</div>
									</div>
								</div>
								<div class="row">
									<div class="col-md-3">
										<div class="form-group">
											<label for="cor_fundo_botao">Cor de Fundo</label>
											<div class="row">
												<div class="col-6">
													<input type="color" id="cor_fundo_botao" class="form-control" value="#007bff" title="Cor de fundo">
												</div>
												<div class="col-6">
													<div class="input-group">
														<div class="input-group-prepend">
															<span class="input-group-text">#</span>
														</div>
														<input type="text" id="cor_fundo_hex" class="form-control" value="007BFF" 
															   maxlength="6" placeholder="007BFF" 
															   pattern="[0-9A-Fa-f]{6}" 
															   title="Cor de fundo em hexadecimal">
													</div>
												</div>
											</div>
										</div>
									</div>
									<div class="col-md-3">
										<div class="form-group">
											<label for="cor_texto_botao">Cor do Texto</label>
											<div class="row">
												<div class="col-6">
													<input type="color" id="cor_texto_botao" class="form-control" value="#ffffff" title="Cor do texto">
												</div>
												<div class="col-6">
													<div class="input-group">
														<div class="input-group-prepend">
															<span class="input-group-text">#</span>
														</div>
														<input type="text" id="cor_texto_hex" class="form-control" value="FFFFFF" 
															   maxlength="6" placeholder="FFFFFF" 
															   pattern="[0-9A-Fa-f]{6}" 
															   title="Cor do texto em hexadecimal">
													</div>
												</div>
											</div>
										</div>
									</div>
									<div class="col-md-3">
										<div class="form-group">
											<label for="icone_botao">Ícone (opcional)</label>
											<input type="text" id="icone_botao" class="form-control" maxlength="50" placeholder="fas fa-vr-cardboard">
											<small class="form-text text-muted">Classes do FontAwesome</small>
										</div>
									</div>
									<div class="col-md-3">
										<div class="form-group">
											<label>&nbsp;</label>
											<div>
												<button type="button" id="btn_adicionar_tour" class="btn btn-warning btn-block">
													<i class="fas fa-plus"></i> Adicionar Botão
												</button>
											</div>
										</div>
									</div>
								</div>
								<div class="row">
									<div class="col-md-12">
										<div class="form-group">
											<div class="form-check">
												<input type="checkbox" id="target_blank" class="form-check-input" checked>
												<label class="form-check-label" for="target_blank">
													Abrir em nova aba/janela
												</label>
											</div>
										</div>
									</div>
								</div>
							</div>
						</div>
						<div class="col-md-4">
							<!-- Preview do botão -->
							<div class="border p-3" style="border-radius: 8px; background-color: #f8f9fa;">
								<h6><i class="fas fa-eye"></i> Preview do Botão</h6>
								<div id="botao_tour_preview" class="text-center" style="min-height: 80px; display: flex; align-items: center; justify-content: center;">
									<button type="button" class="btn" style="background-color: #007bff; color: #ffffff;">
										<i class="fas fa-mouse-pointer"></i> Exemplo de Botão
									</button>
								</div>
								<small class="text-muted mt-2 d-block">O preview será atualizado conforme você preenche os campos</small>
							</div>
						</div>
					</div>

					<!-- Lista de botões adicionados -->
					<div class="mt-4">
						<h5><i class="fas fa-list"></i> Botões de Tour Adicionados</h5>
						<div id="botoes_tour_lista" class="row">
							<!-- Botões existentes (em edição) -->
							{% if botoes_tour_selecionados is defined and botoes_tour_selecionados|length > 0 %}
								{% for botao in botoes_tour_selecionados %}
									<div class="col-md-6 mb-3 botao-tour-item" data-id="{{ botao.id }}">
										<div class="card">
											<div class="card-body p-3">
												<div class="row align-items-center">
													<div class="col-8">
														<h6 class="mb-1">{{ botao.texto_botao }}</h6>
														<small class="text-muted d-block">{{ botao.url_destino }}</small>
														<div class="mt-2">
															<button type="button" class="btn btn-sm" 
																	style="background-color: {{ botao.cor_fundo }}; color: {{ botao.cor_texto }};">
																{% if botao.icone_class %}
																	<i class="{{ botao.icone_class }}"></i> 
																{% endif %}
																{{ botao.texto_botao }}
															</button>
														</div>
													</div>
													<div class="col-4 text-right">
														<button type="button" class="btn btn-sm btn-danger btn-remover-tour" data-id="{{ botao.id }}">
															<i class="fas fa-times"></i>
														</button>
													</div>
												</div>
											</div>
										</div>
									</div>
								{% endfor %}
							{% endif %}
						</div>
						<div id="botoes_tour_empty" class="text-center text-muted" {% if botoes_tour_selecionados is defined and botoes_tour_selecionados|length > 0 %}style="display: none;"{% endif %}>
							<i class="fas fa-info-circle fa-2x mb-3"></i>
							<br>Nenhum botão de tour adicionado ainda
						</div>
					</div>
				</div>
			</div>

			<!-- SEÇÃO: PLANTAS -->
			<div class="card card-success">
				<div class="card-header">
					<h3 class="card-title">
						<i class="fas fa-image"></i>
						Plantas do Empreendimento
					</h3>
					<div class="card-tools">
						<button type="button" class="btn btn-tool" data-card-widget="collapse">
							<i class="fas fa-minus"></i>
						</button>
					</div>
				</div>
				<div class="card-body">
					<div class="row">
						<div class="col-md-8">
							<!-- Formulário para adicionar planta -->
							<div class="border p-3 mb-3" style="border-radius: 8px; background-color: #d4edda;">
								<h5><i class="fas fa-plus-circle text-success"></i> Adicionar Planta</h5>
								<div class="row">
									<div class="col-md-6">
										<div class="form-group">
											<label for="imagem_planta">Imagem da Planta</label>
											                                <input type="file" id="imagem_planta" class="form-control-file" accept="image/*">
											<small class="form-text text-muted">Formatos aceitos: JPG, PNG, GIF</small>
										</div>
									</div>
									<div class="col-md-6">
										<div class="form-group">
											<label for="titulo_principal_planta">Título Principal</label>
											<input type="text" id="titulo_principal_planta" class="form-control" maxlength="120" placeholder="Ex: Planta Tipo 1">
											<small class="form-text text-muted">Máximo 120 caracteres</small>
										</div>
									</div>
								</div>
								<div class="row">
									<div class="col-md-6">
										<div class="form-group">
											<label for="sub_titulo_planta">Sub Título (opcional)</label>
											<input type="text" id="sub_titulo_planta" class="form-control" maxlength="120" placeholder="Ex: Apartamento 2 quartos">
											<small class="form-text text-muted">Máximo 120 caracteres</small>
										</div>
									</div>
									<div class="col-md-6">
										<div class="form-group">
											<label>&nbsp;</label>
											<div>
												<button type="button" id="btn_adicionar_planta" class="btn btn-success btn-block">
													<i class="fas fa-plus"></i> Adicionar Planta
												</button>
											</div>
										</div>
									</div>
								</div>
							</div>
						</div>
						<div class="col-md-4">
							<!-- Preview da planta -->
							<div class="border p-3" style="border-radius: 8px; background-color: #f8f9fa;">
								<h6><i class="fas fa-eye"></i> Preview da Planta</h6>
								<div id="planta_preview" class="text-center" style="min-height: 150px; display: flex; align-items: center; justify-content: center; flex-direction: column;">
									<div class="text-muted">
										<i class="fas fa-image fa-3x mb-2"></i>
										<br>Selecione uma imagem para visualizar
									</div>
								</div>
							</div>
						</div>
					</div>

					<!-- Lista de plantas adicionadas -->
					<div class="mt-4">
						<h5><i class="fas fa-list"></i> Plantas Adicionadas</h5>
						<div id="plantas_lista" class="row">
							<!-- Plantas existentes (em edição) -->
							{% if plantas_selecionadas is defined and plantas_selecionadas|length > 0 %}
								{% for planta in plantas_selecionadas %}
									<div class="col-md-6 mb-3 planta-item" data-id="{{ planta.id }}">
										<div class="card">
											<div class="card-body p-3">
												<div class="row align-items-center">
													<div class="col-4">
														<img src="{{path('imagem',{'path':'plantas',imagem:planta.imagem})}}" 
															 class="img-fluid img-thumbnail" 
															 style="max-height: 80px; object-fit: cover;">
													</div>
													<div class="col-6">
														<h6 class="mb-1">{{ planta.titulo_principal }}</h6>
														{% if planta.sub_titulo %}
															<small class="text-muted d-block">{{ planta.sub_titulo }}</small>
														{% endif %}
													</div>
													<div class="col-2 text-right">
														<button type="button" class="btn btn-sm btn-danger btn-remover-planta" data-id="{{ planta.id }}">
															<i class="fas fa-times"></i>
														</button>
													</div>
												</div>
											</div>
										</div>
									</div>
								{% endfor %}
							{% endif %}
						</div>
						<div id="plantas_empty" class="text-center text-muted" {% if plantas_selecionadas is defined and plantas_selecionadas|length > 0 %}style="display: none;"{% endif %}>
							<i class="fas fa-info-circle fa-2x mb-3"></i>
							<br>Nenhuma planta adicionada ainda
						</div>
					</div>
				</div>
			</div>

			<div class="row">
				<div class="col-md-12">
					<div class="card">
						<div class="card-footer">
							<button type="submit" class="btn btn-info float-right">{{ btn_acao }}</button>
							<a href="{{ path('s_empreendimentos') }}" class="btn btn-default float-left">Voltar</a>
						</div>
					</div>
				</div>
			</div>

			{{ form_end(form) }}
		</div>
	</section>
	<!-- END Main content -->
{% endblock content %}

{% block script %}
	{{ parent() }}
	<script src="{{ asset('plugins/bootstrap/js/bootstrap.bundle.min.js') }}"></script>
	<script src="{{ asset('dist/js/adminlte.min.js') }}"></script>
	<script src="{{ asset('plugins/summernote/summernote-bs4.min.js') }}"></script>
	<script src="{{ asset('plugins/select2/js/select2.full.min.js') }}"></script>

	<script>
		$(function () { // Summernote
$('.editor-content').summernote({
height: 200,
toolbar: [
[
'style', ['style']
],
[
'font',
[
'bold', 'italic', 'underline', 'clear'
]
],
[
'color', ['color']
],
[
'para',
[
'ul', 'ol', 'paragraph'
]
],
[
'table', ['table']
],
[
'insert',
[
'link', 'picture', 'video'
]
],
[
'view',
[
'fullscreen', 'codeview', 'help'
]
]
]
});

// Select2
$('.select2').select2({theme: 'bootstrap4'});

// Auto-generate slug from nome
$('#empreendimentos_nome').on('input', function () {
var nome = $(this).val();
var slug = nome.toLowerCase().replace(/[áàãäâ]/g, 'a').replace(/[éèëê]/g, 'e').replace(/[íìïî]/g, 'i').replace(/[óòõöô]/g, 'o').replace(/[úùüû]/g, 'u').replace(/[ç]/g, 'c').replace(/[ñ]/g, 'n').replace(/[^a-z0-9 ]/g, '').replace(/\s+/g, '-').replace(/^-+|-+$/g, '');

if ($('#empreendimentos_slug').val() === '' || $('#empreendimentos_slug').data('auto-generated')) {
$('#empreendimentos_slug').val(slug).data('auto-generated', true);
}
});

// Stop auto-generation if user manually edits slug
$('#empreendimentos_slug').on('input', function () {
$(this).data('auto-generated', false);
});

// Character counters for SEO fields
function updateCharCount(fieldId, counterId, maxLength) {
var $field = $('#' + fieldId);
var $counter = $('#' + counterId);

function updateCount() {
var length = $field.val().length;
$counter.text(length);

if (length > maxLength) {
$counter.addClass('text-danger');
} else if (length > maxLength * 0.8) {
$counter.removeClass('text-danger').addClass('text-warning');
} else {
$counter.removeClass('text-danger text-warning');
}
}

$field.on('input', updateCount);
updateCount(); // Initial count
}

updateCharCount('empreendimentos_meta_title', 'meta-title-count', 160);
updateCharCount('empreendimentos_meta_description', 'meta-desc-count', 255);

// ==============================================
// VERSÃO SIMPLIFICADA PARA DEBUG
// ==============================================

console.log('🚀 Iniciando sistema de galeria SIMPLIFICADO...');

// Array para controlar as imagens selecionadas
var galeriaFiles = [];

$(document).ready(function() {
	// Aguardar um pouco para garantir que o DOM está pronto
	setTimeout(function() {
		console.log('🔍 Procurando campo de galeria...');
		
		// Tentar múltiplos seletores
		var field = null;
		var selectors = [
			'#galeria_imagens_input',
			'#empreendimentos_galeria_imagens',
			'input[name*="galeria_imagens"]',
			'input[name="empreendimentos[galeria_imagens][]"]',
			'input[name="empreendimentos[galeria_imagens]"]'
		];
		
		for (var i = 0; i < selectors.length; i++) {
			field = $(selectors[i]);
			console.log('🎯 Testando seletor "' + selectors[i] + '":', field.length > 0);
			if (field.length > 0) {
				console.log('✅ Campo encontrado com seletor:', selectors[i]);
				console.log('📝 Nome do campo:', field.attr('name'));
				console.log('🆔 ID do campo:', field.attr('id'));
				break;
			}
		}
		
		if (field && field.length > 0) {
			// Garantir que tem ID
			if (!field.attr('id')) {
				field.attr('id', 'galeria_imagens_input');
				console.log('🔧 ID adicionado ao campo');
			}
			
			// Adicionar instruções visuais
			$('#galeria_imagens_input').after(
				'<div class="text-muted small mt-2">' +
				'<i class="fas fa-lightbulb"></i> <strong>Dicas:</strong><br>' +
				'• Você pode arrastar e soltar imagens diretamente na área acima<br>' +
				'• Selecione múltiplas imagens segurando Ctrl e clicando<br>' +
				'• Para muitas imagens grandes, reduza a qualidade antes do upload<br>' +
				'• As imagens serão salvas apenas quando você clicar em "Salvar"' +
				'</div>'
			);

			// Evento de seleção de arquivos
			field.on('change', function(e) {
				console.log('🔥 FUNCIONOU! Arquivo selecionado!');
				console.log('📁 Número de arquivos:', e.target.files.length);
				
				// VALIDAÇÕES ANTES DE PROCESSAR
				var totalSize = 0;
				var invalidFiles = [];
				var oversizedFiles = [];
				var maxFileSize = 10 * 1024 * 1024; // 10MB
				var maxTotalSize = 80 * 1024 * 1024; // 80MB (deixar margem)
				var maxFiles = 20;
				
				// Verificar limite de arquivos
				if (e.target.files.length > maxFiles) {
					alert('⚠️ Máximo de ' + maxFiles + ' arquivos permitidos. Você selecionou ' + e.target.files.length + ' arquivos.');
					return;
				}
				
				// Adicionar novos arquivos ao array (sem duplicar)
				for (var i = 0; i < e.target.files.length; i++) {
					var file = e.target.files[i];
					
					// Validar tipo
					if (!file.type.startsWith('image/')) {
						invalidFiles.push(file.name);
						continue;
					}
					
					// Validar tamanho individual
					if (file.size > maxFileSize) {
						oversizedFiles.push(file.name + ' (' + (file.size / 1024 / 1024).toFixed(1) + 'MB)');
						continue;
					}
					
					totalSize += file.size;
					
					// Criar objeto único para cada arquivo
					var fileObj = {
						file: file,
						id: 'img_' + Date.now() + '_' + Math.random().toString(36).substr(2, 9),
						name: file.name,
						size: file.size
					};
					galeriaFiles.push(fileObj);
					console.log('📄 Arquivo adicionado:', file.name);
				}
				
				// Mostrar avisos se necessário
				if (invalidFiles.length > 0) {
					alert('⚠️ Arquivos inválidos (apenas imagens são aceitas):\n• ' + invalidFiles.join('\n• '));
				}
				
				if (oversizedFiles.length > 0) {
					alert('⚠️ Arquivos muito grandes (máximo 10MB cada):\n• ' + oversizedFiles.join('\n• '));
				}
				
				// Verificar tamanho total
				if (totalSize > maxTotalSize) {
					alert('⚠️ Tamanho total muito grande!\nTotal: ' + (totalSize / 1024 / 1024).toFixed(1) + 'MB\nMáximo permitido: ' + (maxTotalSize / 1024 / 1024) + 'MB\n\nRemova algumas imagens ou reduza a qualidade.');
					// Limpar seleção se exceder limite
					galeriaFiles = [];
				}
				
				// Atualizar preview
				updateGaleriaPreview();
				updateFileInput();
			});
			
			console.log('✅ Evento de mudança anexado com sucesso');
			
		} else {
			console.error('❌ NENHUM CAMPO DE GALERIA ENCONTRADO!');
			console.log('🔍 Listando todos os campos file na página:');
			$('input[type="file"]').each(function() {
				console.log('📁 Campo file:', $(this).attr('name'), $(this).attr('id'));
			});
		}
		
	}, 500);
});

// Atualizar preview da galeria
function updateGaleriaPreview() {
	var container = $('#preview-images');
	container.empty();
	
	if (galeriaFiles.length > 0) {
		$('#preview-container').show();
		
		galeriaFiles.forEach(function(fileObj, index) {
			var reader = new FileReader();
			reader.onload = function(e) {
				var preview = $(`
					<div class="col-md-3 col-sm-6 mb-3" data-file-id="${fileObj.id}">
						<div class="card">
							<div class="position-relative">
								<img src="${e.target.result}" 
									 class="card-img-top" 
									 style="height:150px;object-fit:cover;" 
									 alt="${fileObj.name}">
								<button type="button" 
										class="btn btn-danger btn-sm position-absolute btn-remove-image" 
										data-file-id="${fileObj.id}"
										style="top: 5px; right: 5px; padding: 2px 6px;">
									<i class="fas fa-trash"></i>
								</button>
							</div>
							<div class="card-body p-2">
								<p class="card-text small mb-1">
									<strong>${fileObj.name}</strong>
								</p>
								<p class="card-text small text-muted mb-0">
									${(fileObj.size / 1024 / 1024).toFixed(2)} MB
								</p>
							</div>
						</div>
					</div>
				`);
				container.append(preview);
			};
			reader.readAsDataURL(fileObj.file);
		});
		
		// Atualizar contador
		$('#preview-container h6').html(
			'<i class="fas fa-eye"></i> Prévia das novas imagens: <span class="badge badge-info">' + galeriaFiles.length + '</span>'
		);
	} else {
		$('#preview-container').hide();
	}
}

// Atualizar o input file com as imagens restantes
function updateFileInput() {
	var dt = new DataTransfer();
	
	galeriaFiles.forEach(function(fileObj) {
		dt.items.add(fileObj.file);
	});
	
	var inputElement = document.getElementById('galeria_imagens_input') || 
					   document.querySelector('input[name*="galeria_imagens"]');
	
	if (inputElement) {
		inputElement.files = dt.files;
		console.log('✅ Input atualizado com', dt.files.length, 'arquivos');
	}
}

// Evento para remover imagem individual
$(document).on('click', '.btn-remove-image', function(e) {
	e.preventDefault();
	var fileId = $(this).data('file-id');
	var fileName = $(this).closest('.card').find('strong').text();
	
	if (confirm('Remover a imagem "' + fileName + '"?')) {
		console.log('🗑️ Removendo imagem:', fileName);
		
		// Remover do array
		galeriaFiles = galeriaFiles.filter(function(fileObj) {
			return fileObj.id !== fileId;
		});
		
		// Remover do DOM com animação
		$('[data-file-id="' + fileId + '"]').fadeOut(300, function() {
			$(this).remove();
			
			// Atualizar input e preview
			updateFileInput();
			
			// Atualizar contador ou ocultar se vazio
			if (galeriaFiles.length === 0) {
				$('#preview-container').hide();
			} else {
				$('#preview-container h6').html(
					'<i class="fas fa-eye"></i> Prévia das novas imagens: <span class="badge badge-info">' + galeriaFiles.length + '</span>'
				);
			}
		});
	}
});

	// ==============================================
	// SISTEMA DE REMOÇÃO AJAX - IMAGENS EXISTENTES
	// ==============================================

	$(document).on('click', '.btn-mark-remove', function(e) {
		e.preventDefault();
		
		var $btn = $(this);
		
		// ✅ PEGAR VALOR DIRETAMENTE DO HTML E CONVERTER PARA INT
		var imageIdRaw = $btn.attr('data-image-id');
		var imageId = parseInt(imageIdRaw, 10);
		var imageTitle = $btn.data('titulo');
		var $galeriaItem = $('#galeria-item-' + imageId);
		
		// Debug completo
		console.log('🔍 DEBUG COMPLETO:');
		console.log('- Valor HTML bruto:', imageIdRaw);
		console.log('- Image ID convertido:', imageId);
		console.log('- Image ID tipo:', typeof imageId);
		console.log('- É número válido:', !isNaN(imageId));
		console.log('- É maior que 0:', imageId > 0);
		
		// ✅ VALIDAÇÃO ROBUSTA COM INT
		if (isNaN(imageId) || imageId <= 0) {
			alert('❌ Erro: ID da imagem inválido (NaN ou <= 0). Valor: ' + imageIdRaw);
			return;
		}
		
		console.log('✅ VALIDAÇÃO PASSOU! ImageId válido:', imageId);
		
		// Confirmação com nome da imagem
		var confirmMsg = 'Tem certeza que deseja remover a imagem "' + imageTitle + '"?\n\n' +
						'⚠️ Esta ação não pode ser desfeita!';
		
		if (!confirm(confirmMsg)) {
			return;
		}
		
		// Feedback visual - botão loading
		$btn.prop('disabled', true);
		$btn.html('<i class="fas fa-spinner fa-spin"></i> Removendo...');
		$galeriaItem.addClass('removing').css('opacity', '0.5');
		
		// ✅ DEBUG DETALHADO PARA ID DO EMPREENDIMENTO
		
		
		// Tentar múltiplas formas de pegar o ID
		var empId1 = $('input[name="empreendimentos[id]"]').val();
		var empId2 = $('input[name="id"]').val();
		var empId3 = getEmpreendimentoIdFromUrl();
		
		
		
		// Listar todos os inputs que podem conter ID
		
		$('input[name*="id"]').each(function() {
			console.log('  * Nome:', $(this).attr('name'), 'Valor:', $(this).val());
		});
		
		// Tentar ID do empreendimento
		var empreendimentoId = empId1 || empId2 || empId3;
		
		
		
		if (!empreendimentoId) {
			alert('❌ Erro: ID do empreendimento não encontrado\n\nVerifique o console para mais detalhes');
			resetButton();
			return;
		}
		
		// Converter para int se necessário
		empreendimentoId = parseInt(empreendimentoId, 10);
		if (isNaN(empreendimentoId) || empreendimentoId <= 0) {
			alert('❌ Erro: ID do empreendimento inválido: ' + empreendimentoId);
			resetButton();
			return;
		}
		
		console.log('🗑️ Removendo imagem ID:', imageId, 'do empreendimento:', empreendimentoId);
		
		// Chamar endpoint AJAX
		$.ajax({
			url: '{{ path("s_empreendimentos_remove_galeria_image") }}',
			type: 'POST',
			data: {
				image_id: imageId,
				empreendimento_id: empreendimentoId
			},
			dataType: 'json',
			success: function(response) {
				console.log('✅ Resposta do servidor:', response);
				
				if (response.success) {
					// Sucesso - remover com animação
					$galeriaItem.fadeOut(400, function() {
						$(this).remove();
						
						// Atualizar contador de imagens
						updateImageCount();
						
						// Mostrar notificação de sucesso
						showNotification('success', response.message || 'Imagem removida com sucesso!');
					});
				} else {
					// Erro do servidor
					alert('❌ Erro: ' + (response.message || 'Falha ao remover imagem'));
					resetButton();
				}
			},
			error: function(xhr, status, error) {
				console.error('❌ Erro AJAX:', {xhr: xhr, status: status, error: error});
				
				var errorMsg = 'Erro de conexão ao remover imagem';
				if (xhr.responseJSON && xhr.responseJSON.message) {
					errorMsg = xhr.responseJSON.message;
				}
				
				alert('❌ ' + errorMsg);
				resetButton();
			}
		});
		
		function resetButton() {
			$btn.prop('disabled', false);
			$btn.html('<i class="fas fa-trash"></i> Remover');
			$galeriaItem.removeClass('removing').css('opacity', '1');
		}
	});
	
	// Função auxiliar para pegar ID do empreendimento da URL
	function getEmpreendimentoIdFromUrl() {
		var url = window.location.pathname;
		console.log('  🔍 Analisando URL:', url);
		
		// Tentar diferentes padrões de URL
		var patterns = [
			/empreendimentos\/(\d+)/,           // /empreendimentos/123
			/empreendimentos\/edit\/(\d+)/,     // /empreendimentos/edit/123
			/empreendimentos\/(\d+)\/edit/,     // /empreendimentos/123/edit
			/\/(\d+)\/edit$/,                   // qualquer coisa que termine com /123/edit
			/\/(\d+)$/                          // qualquer coisa que termine com /123
		];
		
		for (var i = 0; i < patterns.length; i++) {
			var match = url.match(patterns[i]);
			if (match) {
				console.log('  ✅ URL match encontrado com padrão', i + 1, ':', match[1]);
				return match[1];
			}
		}
		
		console.log('  ❌ Nenhum padrão de URL matched');
		return null;
	}
	
	// Função para atualizar contador de imagens
	function updateImageCount() {
		var $container = $('.row').has('[id^="galeria-item-"]');
		var remainingImages = $container.find('[id^="galeria-item-"]:visible').length;
		
		var $header = $container.closest('.mt-4').find('h6');
		if ($header.length) {
			if (remainingImages > 0) {
				$header.html('<i class="fas fa-folder-open"></i> Imagens atuais na galeria (' + remainingImages + '):');
			} else {
				$header.html('<i class="fas fa-folder-open"></i> Nenhuma imagem na galeria');
				$container.append('<div class="col-12 text-center text-muted p-4"><i class="fas fa-images fa-3x mb-3"></i><br>Nenhuma imagem na galeria</div>');
			}
		}
	}
	
	// Função para mostrar notificações
	function showNotification(type, message) {
		var alertClass = type === 'success' ? 'alert-success' : 'alert-danger';
		var icon = type === 'success' ? 'fas fa-check-circle' : 'fas fa-exclamation-circle';
		
		var $notification = $(`
			<div class="alert ${alertClass} alert-dismissible fade show position-fixed" 
				 style="top: 20px; right: 20px; z-index: 9999; min-width: 300px;">
				<i class="${icon}"></i> ${message}
				<button type="button" class="close" data-dismiss="alert">
					<span>&times;</span>
				</button>
			</div>
		`);
		
		$('body').append($notification);
		
		// Auto-remover após 5 segundos
		setTimeout(function() {
			$notification.fadeOut(function() {
				$(this).remove();
			});
		}, 5000);
	}

// Backup dos arrays originais
var selectedImages = [];
var imagesToRemove = [];

	// ========================================
	// GESTÃO DE BENEFÍCIOS
	// ========================================

	// Preview do benefício selecionado
	$('#beneficio_select').on('change', function() {
		var selectedOption = $(this).find('option:selected');
		var preview = $('#beneficio_preview');
		var cor = $('#cor_beneficio').val();
		
		if (selectedOption.val()) {
			var titulo = selectedOption.data('titulo');
			var svgCode = selectedOption.data('svg');
			
			var previewHtml = '<div style="color: ' + cor + ';">' + svgCode + '</div>';
			previewHtml += '<h6 class="mt-2">' + titulo + '</h6>';
			
			var valor = $('#valor_personalizado').val();
			if (valor) {
				previewHtml += '<small class="text-muted">' + valor + '</small>';
			}
			
			preview.html(previewHtml);
		} else {
			preview.html('<span class="text-muted"><i class="fas fa-star fa-2x"></i><br><small>Selecione um benefício</small></span>');
		}
	});

	// Atualizar preview quando cor ou valor mudar
	$('#cor_beneficio, #cor_hex_input, #valor_personalizado').on('change input', function() {
		$('#beneficio_select').trigger('change');
	});

	// Sincronizar color picker com input hex
	$('#cor_beneficio').on('change input', function() {
		var color = $(this).val();
		var hex = color.replace('#', '').toUpperCase();
		$('#cor_hex_input').val(hex);
	});

	// Sincronizar input hex com color picker
	$('#cor_hex_input').on('input', function() {
		var hex = $(this).val().replace('#', '');
		
		// Validar se é um hex válido (6 caracteres hexadecimais)
		if (/^[0-9A-Fa-f]{6}$/.test(hex)) {
			$(this).removeClass('is-invalid').addClass('is-valid');
			$('#cor_beneficio').val('#' + hex);
		} else if (hex.length === 0) {
			$(this).removeClass('is-invalid is-valid');
		} else {
			$(this).removeClass('is-valid').addClass('is-invalid');
		}
	});

	// Validação adicional no blur para garantir formato correto
	$('#cor_hex_input').on('blur', function() {
		var hex = $(this).val().replace('#', '');
		
		if (hex.length > 0) {
			// Se não for válido, reverter para a cor atual do color picker
			if (!/^[0-9A-Fa-f]{6}$/.test(hex)) {
				var currentColor = $('#cor_beneficio').val();
				var currentHex = currentColor.replace('#', '').toUpperCase();
				$(this).val(currentHex);
				$(this).removeClass('is-invalid').addClass('is-valid');
			} else {
				// Padronizar para maiúsculo
				$(this).val(hex.toUpperCase());
				$(this).removeClass('is-invalid').addClass('is-valid');
			}
		}
	});

	// Função para obter ID do empreendimento
	function getEmpreendimentoId() {
		{% if empreendimento_id %}
			return {{ empreendimento_id }};
		{% else %}
			return null;
		{% endif %}
	}

	// Adicionar benefício
	$('#btn_adicionar_beneficio').on('click', function() {
		var btn = $(this);
		var beneficioId = $('#beneficio_select').val();
		var valorPersonalizado = $('#valor_personalizado').val();
		var corHex = $('#cor_beneficio').val();
		var empreendimentoId = getEmpreendimentoId();

		// Validações
		if (!beneficioId) {
			alert('Por favor, selecione um benefício.');
			return;
		}

		if (!empreendimentoId) {
			alert('Este empreendimento precisa ser salvo antes de adicionar benefícios.');
			return;
		}

		// Verificar se já existe
		var existente = $('#beneficios_lista').find('[data-beneficio-id="' + beneficioId + '"]');
		if (existente.length > 0) {
			alert('Este benefício já foi adicionado ao empreendimento.');
			return;
		}

		// Desabilitar botão
		btn.prop('disabled', true).html('<i class="fas fa-spinner fa-spin"></i> Adicionando...');

		// Requisição AJAX
		$.ajax({
			url: '{{ path('s_empreendimentos_adicionar_beneficio') }}',
			method: 'POST',
			data: {
				empreendimento_id: empreendimentoId,
				beneficio_id: beneficioId,
				valor_personalizado: valorPersonalizado,
				cor_hex: corHex
			},
			dataType: 'json',
			success: function(response) {
				if (response.success) {
					// Adicionar à lista
					adicionarBeneficioLista(response.data);
					
					// Limpar formulário
					limparFormularioBeneficio();
					
					// Mostrar sucesso
					showNotification('success', response.message);
				} else {
					alert('Erro: ' + response.message);
				}
			},
			error: function(xhr, status, error) {
				console.error('Erro AJAX:', error);
				alert('Erro ao adicionar benefício. Tente novamente.');
			},
			complete: function() {
				// Reabilitar botão
				btn.prop('disabled', false).html('<i class="fas fa-plus"></i> Adicionar Benefício');
			}
		});
	});

	// Função para adicionar benefício à lista
	function adicionarBeneficioLista(data) {
		var html = '<div class="col-md-6 mb-3 beneficio-item" data-id="' + data.id + '" data-beneficio-id="' + data.beneficio_id + '">';
		html += '<div class="card">';
		html += '<div class="card-body p-3">';
		html += '<div class="row align-items-center">';
		html += '<div class="col-2 text-center">';
		html += '<div style="width: 40px; height: 40px; display: inline-flex; align-items: center; justify-content: center; color: ' + data.cor_hex + ';">';
		html += data.svg_code;
		html += '</div>';
		html += '</div>';
		html += '<div class="col-7">';
		html += '<h6 class="mb-1">' + data.titulo + '</h6>';
		if (data.valor_personalizado) {
			html += '<small class="text-muted">' + data.valor_personalizado + '</small>';
		}
		html += '</div>';
		html += '<div class="col-3 text-right">';
		html += '<button type="button" class="btn btn-sm btn-danger btn-remover-beneficio" data-id="' + data.id + '">';
		html += '<i class="fas fa-times"></i>';
		html += '</button>';
		html += '</div>';
		html += '</div>';
		html += '</div>';
		html += '</div>';
		html += '</div>';

		$('#beneficios_lista').append(html);
		$('#beneficios_empty').hide();
	}

	// Função para limpar formulário
	function limparFormularioBeneficio() {
		$('#beneficio_select').val('').trigger('change');
		$('#valor_personalizado').val('');
		$('#cor_beneficio').val('#000000');
		$('#cor_hex_input').val('000000').removeClass('is-invalid is-valid');
		$('#beneficio_preview').html('<span class="text-muted"><i class="fas fa-star fa-2x"></i><br><small>Selecione um benefício</small></span>');
	}

	// Remover benefício (delegação de eventos)
	$(document).on('click', '.btn-remover-beneficio', function() {
		var btn = $(this);
		var id = btn.data('id');
		var beneficioItem = btn.closest('.beneficio-item');

		if (!confirm('Tem certeza que deseja remover este benefício?')) {
			return;
		}

		// Desabilitar botão
		btn.prop('disabled', true).html('<i class="fas fa-spinner fa-spin"></i>');

		// Requisição AJAX
		$.ajax({
			url: '{{ path('s_empreendimentos_remover_beneficio') }}',
			method: 'POST',
			data: {
				id: id
			},
			dataType: 'json',
			success: function(response) {
				if (response.success) {
					// Remover da lista com animação
					beneficioItem.fadeOut(400, function() {
						$(this).remove();
						
						// Verificar se lista ficou vazia
						if ($('#beneficios_lista .beneficio-item').length === 0) {
							$('#beneficios_empty').show();
						}
					});
					
					// Mostrar sucesso
					showNotification('success', response.message);
				} else {
					alert('Erro: ' + response.message);
					btn.prop('disabled', false).html('<i class="fas fa-times"></i>');
				}
			},
			error: function(xhr, status, error) {
				console.error('Erro AJAX:', error);
				alert('Erro ao remover benefício. Tente novamente.');
				btn.prop('disabled', false).html('<i class="fas fa-times"></i>');
			}
		});
	});

	// Função auxiliar para mostrar notificações
	function showNotification(type, message) {
		var alertClass = type === 'success' ? 'alert-success' : 'alert-danger';
		var iconClass = type === 'success' ? 'fa-check-circle' : 'fa-exclamation-triangle';
		
		var notification = $('<div class="alert ' + alertClass + ' alert-dismissible fade show" role="alert" style="position: fixed; top: 20px; right: 20px; z-index: 9999; min-width: 300px;">' +
			'<i class="fas ' + iconClass + '"></i> ' + message +
			'<button type="button" class="close" data-dismiss="alert" aria-label="Close">' +
			'<span aria-hidden="true">&times;</span>' +
			'</button>' +
			'</div>');
		
		$('body').append(notification);
		
		// Auto-remover após 5 segundos
		setTimeout(function() {
			notification.alert('close');
		}, 5000);
	}

	// ========================================
	// GESTÃO DE BOTÕES DE TOUR
	// ========================================

	// Sincronizar cores de fundo
	$('#cor_fundo_botao').on('change input', function() {
		var color = $(this).val();
		var hex = color.replace('#', '').toUpperCase();
		$('#cor_fundo_hex').val(hex);
		atualizarPreviewBotaoTour();
	});

	$('#cor_fundo_hex').on('input', function() {
		var hex = $(this).val().replace('#', '');
		if (/^[0-9A-Fa-f]{6}$/.test(hex)) {
			$(this).removeClass('is-invalid').addClass('is-valid');
			$('#cor_fundo_botao').val('#' + hex);
			atualizarPreviewBotaoTour();
		} else if (hex.length === 0) {
			$(this).removeClass('is-invalid is-valid');
		} else {
			$(this).removeClass('is-valid').addClass('is-invalid');
		}
	});

	$('#cor_fundo_hex').on('blur', function() {
		var hex = $(this).val().replace('#', '');
		if (hex.length > 0) {
			if (!/^[0-9A-Fa-f]{6}$/.test(hex)) {
				var currentColor = $('#cor_fundo_botao').val();
				var currentHex = currentColor.replace('#', '').toUpperCase();
				$(this).val(currentHex);
				$(this).removeClass('is-invalid').addClass('is-valid');
			} else {
				$(this).val(hex.toUpperCase());
				$(this).removeClass('is-invalid').addClass('is-valid');
			}
		}
	});

	// Sincronizar cores de texto
	$('#cor_texto_botao').on('change input', function() {
		var color = $(this).val();
		var hex = color.replace('#', '').toUpperCase();
		$('#cor_texto_hex').val(hex);
		atualizarPreviewBotaoTour();
	});

	$('#cor_texto_hex').on('input', function() {
		var hex = $(this).val().replace('#', '');
		if (/^[0-9A-Fa-f]{6}$/.test(hex)) {
			$(this).removeClass('is-invalid').addClass('is-valid');
			$('#cor_texto_botao').val('#' + hex);
			atualizarPreviewBotaoTour();
		} else if (hex.length === 0) {
			$(this).removeClass('is-invalid is-valid');
		} else {
			$(this).removeClass('is-valid').addClass('is-invalid');
		}
	});

	$('#cor_texto_hex').on('blur', function() {
		var hex = $(this).val().replace('#', '');
		if (hex.length > 0) {
			if (!/^[0-9A-Fa-f]{6}$/.test(hex)) {
				var currentColor = $('#cor_texto_botao').val();
				var currentHex = currentColor.replace('#', '').toUpperCase();
				$(this).val(currentHex);
				$(this).removeClass('is-invalid').addClass('is-valid');
			} else {
				$(this).val(hex.toUpperCase());
				$(this).removeClass('is-invalid').addClass('is-valid');
			}
		}
	});

	// Atualizar preview quando campos mudarem
	$('#texto_botao, #icone_botao').on('input', atualizarPreviewBotaoTour);

	// Função para atualizar preview do botão
	function atualizarPreviewBotaoTour() {
		var preview = $('#botao_tour_preview');
		var texto = $('#texto_botao').val() || 'Exemplo de Botão';
		var corFundo = $('#cor_fundo_botao').val() || '#007bff';
		var corTexto = $('#cor_texto_botao').val() || '#ffffff';
		var icone = $('#icone_botao').val().trim();

		var iconeHtml = '';
		if (icone) {
			iconeHtml = '<i class="' + icone + '"></i> ';
		}

		var botaoHtml = '<button type="button" class="btn" style="background-color: ' + corFundo + '; color: ' + corTexto + '; border-color: ' + corFundo + ';">';
		botaoHtml += iconeHtml + texto;
		botaoHtml += '</button>';

		preview.html(botaoHtml);
	}

	// Adicionar botão de tour
	$('#btn_adicionar_tour').on('click', function() {
		var btn = $(this);
		var textoBotao = $('#texto_botao').val().trim();
		var urlDestino = $('#url_destino').val().trim();
		var targetBlank = $('#target_blank').is(':checked') ? 1 : 0;
		var corFundo = $('#cor_fundo_botao').val();
		var corTexto = $('#cor_texto_botao').val();
		var iconeClass = $('#icone_botao').val().trim();
		var empreendimentoId = getEmpreendimentoId();

		// Validações
		if (!textoBotao) {
			alert('Por favor, digite o texto do botão.');
			$('#texto_botao').focus();
			return;
		}

		if (!urlDestino) {
			alert('Por favor, digite a URL de destino.');
			$('#url_destino').focus();
			return;
		}

		// Validar URL básica
		if (!urlDestino.match(/^https?:\/\/.+/)) {
			alert('Por favor, digite uma URL válida começando com http:// ou https://');
			$('#url_destino').focus();
			return;
		}

		if (!empreendimentoId) {
			alert('Este empreendimento precisa ser salvo antes de adicionar botões de tour.');
			return;
		}

		// Desabilitar botão
		btn.prop('disabled', true).html('<i class="fas fa-spinner fa-spin"></i> Adicionando...');

		// Requisição AJAX
		$.ajax({
			url: '{{ path('s_empreendimentos_adicionar_botao_tour') }}',
			method: 'POST',
			data: {
				empreendimento_id: empreendimentoId,
				texto_botao: textoBotao,
				url_destino: urlDestino,
				target_blank: targetBlank,
				cor_fundo: corFundo,
				cor_texto: corTexto,
				icone_class: iconeClass
			},
			dataType: 'json',
			success: function(response) {
				if (response.success) {
					// Adicionar à lista
					adicionarBotaoTourLista(response.data);
					
					// Limpar formulário
					limparFormularioBotaoTour();
					
					// Mostrar sucesso
					showNotification('success', response.message);
				} else {
					alert('Erro: ' + response.message);
				}
			},
			error: function(xhr, status, error) {
				console.error('Erro AJAX:', error);
				alert('Erro ao adicionar botão de tour. Tente novamente.');
			},
			complete: function() {
				// Reabilitar botão
				btn.prop('disabled', false).html('<i class="fas fa-plus"></i> Adicionar Botão');
			}
		});
	});

	// Função para adicionar botão à lista
	function adicionarBotaoTourLista(data) {
		var iconeHtml = '';
		if (data.icone_class) {
			iconeHtml = '<i class="' + data.icone_class + '"></i> ';
		}

		var html = '<div class="col-md-6 mb-3 botao-tour-item" data-id="' + data.id + '">';
		html += '<div class="card">';
		html += '<div class="card-body p-3">';
		html += '<div class="row align-items-center">';
		html += '<div class="col-8">';
		html += '<h6 class="mb-1">' + data.texto_botao + '</h6>';
		html += '<small class="text-muted d-block">' + data.url_destino + '</small>';
		html += '<div class="mt-2">';
		html += '<button type="button" class="btn btn-sm" style="background-color: ' + data.cor_fundo + '; color: ' + data.cor_texto + ';">';
		html += iconeHtml + data.texto_botao;
		html += '</button>';
		html += '</div>';
		html += '</div>';
		html += '<div class="col-4 text-right">';
		html += '<button type="button" class="btn btn-sm btn-danger btn-remover-tour" data-id="' + data.id + '">';
		html += '<i class="fas fa-times"></i>';
		html += '</button>';
		html += '</div>';
		html += '</div>';
		html += '</div>';
		html += '</div>';
		html += '</div>';

		$('#botoes_tour_lista').append(html);
		$('#botoes_tour_empty').hide();
	}

	// Função para limpar formulário
	function limparFormularioBotaoTour() {
		$('#texto_botao').val('');
		$('#url_destino').val('');
		$('#icone_botao').val('');
		$('#target_blank').prop('checked', true);
		$('#cor_fundo_botao').val('#007bff');
		$('#cor_fundo_hex').val('007BFF').removeClass('is-invalid is-valid');
		$('#cor_texto_botao').val('#ffffff');
		$('#cor_texto_hex').val('FFFFFF').removeClass('is-invalid is-valid');
		atualizarPreviewBotaoTour();
	}

	// Remover botão de tour (delegação de eventos)
	$(document).on('click', '.btn-remover-tour', function() {
		var btn = $(this);
		var id = btn.data('id');
		var botaoItem = btn.closest('.botao-tour-item');

		if (!confirm('Tem certeza que deseja remover este botão de tour?')) {
			return;
		}

		// Desabilitar botão
		btn.prop('disabled', true).html('<i class="fas fa-spinner fa-spin"></i>');

		// Requisição AJAX
		$.ajax({
			url: '{{ path('s_empreendimentos_remover_botao_tour') }}',
			method: 'POST',
			data: {
				id: id
			},
			dataType: 'json',
			success: function(response) {
				if (response.success) {
					// Remover da lista com animação
					botaoItem.fadeOut(400, function() {
						$(this).remove();
						
						// Verificar se lista ficou vazia
						if ($('#botoes_tour_lista .botao-tour-item').length === 0) {
							$('#botoes_tour_empty').show();
						}
					});
					
					// Mostrar sucesso
					showNotification('success', response.message);
				} else {
					alert('Erro: ' + response.message);
					btn.prop('disabled', false).html('<i class="fas fa-times"></i>');
				}
			},
			error: function(xhr, status, error) {
				console.error('Erro AJAX:', error);
				alert('Erro ao remover botão de tour. Tente novamente.');
				btn.prop('disabled', false).html('<i class="fas fa-times"></i>');
			}
		});
	});

	// Inicializar preview
	atualizarPreviewBotaoTour();

	// ========================================
	// GESTÃO DE PLANTAS
	// ========================================

	// Preview da imagem selecionada
	$('#imagem_planta').on('change', function() {
		var file = this.files[0];
		var preview = $('#planta_preview');
		
		if (file) {
			var reader = new FileReader();
			
			reader.onload = function(e) {
				var html = '<div class="text-center">';
				html += '<img src="' + e.target.result + '" class="img-fluid img-thumbnail mb-2" style="max-height: 120px; max-width: 100%;">';
				html += '<br><small class="text-muted">Preview da imagem selecionada</small>';
				html += '</div>';
				preview.html(html);
			};
			
			reader.readAsDataURL(file);
		} else {
			preview.html('<div class="text-muted"><i class="fas fa-image fa-3x mb-2"></i><br>Selecione uma imagem para visualizar</div>');
		}
	});

	// Adicionar planta
	$('#btn_adicionar_planta').on('click', function() {
		var btn = $(this);
		var tituloPlanta = $('#titulo_principal_planta').val().trim();
		var subTituloPlanta = $('#sub_titulo_planta').val().trim();
		var imagemPlanta = $('#imagem_planta')[0].files[0];
		var empreendimentoId = getEmpreendimentoId();

		// Validações
		if (!tituloPlanta) {
			alert('Por favor, digite o título principal da planta.');
			$('#titulo_principal_planta').focus();
			return;
		}

		if (!imagemPlanta) {
			alert('Por favor, selecione uma imagem para a planta.');
			$('#imagem_planta').focus();
			return;
		}

		if (!empreendimentoId) {
			alert('Este empreendimento precisa ser salvo antes de adicionar plantas.');
			return;
		}

		// Desabilitar botão
		btn.prop('disabled', true).html('<i class="fas fa-spinner fa-spin"></i> Adicionando...');

		// Preparar FormData para upload
		var formData = new FormData();
		formData.append('empreendimento_id', empreendimentoId);
		formData.append('titulo_principal', tituloPlanta);
		formData.append('sub_titulo', subTituloPlanta);
		formData.append('imagem_planta', imagemPlanta);

		// Requisição AJAX
		$.ajax({
			url: '{{ path('s_empreendimentos_adicionar_planta') }}',
			method: 'POST',
			data: formData,
			processData: false,
			contentType: false,
			dataType: 'json',
			success: function(response) {
				if (response.success) {
					// Adicionar à lista
					adicionarPlantaLista(response.data);
					
					// Limpar formulário
					limparFormularioPlanta();
					
					// Mostrar sucesso
					showNotification('success', response.message);
				} else {
					alert('Erro: ' + response.message);
				}
			},
			error: function(xhr, status, error) {
				console.error('Erro AJAX:', error);
				alert('Erro ao adicionar planta. Tente novamente.');
			},
			complete: function() {
				// Reabilitar botão
				btn.prop('disabled', false).html('<i class="fas fa-plus"></i> Adicionar Planta');
			}
		});
	});

	// Função para adicionar planta à lista
	function adicionarPlantaLista(data) {
		var imagemUrl = '{{path('imagem',{'path':'plantas',imagem:'IMAGEM_PLACEHOLDER'})}}'.replace('IMAGEM_PLACEHOLDER', data.imagem);
		var subTituloHtml = '';
		
		if (data.sub_titulo) {
			subTituloHtml = '<small class="text-muted d-block">' + data.sub_titulo + '</small>';
		}

		var html = '<div class="col-md-6 mb-3 planta-item" data-id="' + data.id + '">';
		html += '<div class="card">';
		html += '<div class="card-body p-3">';
		html += '<div class="row align-items-center">';
		html += '<div class="col-4">';
		html += '<img src="' + imagemUrl + '" class="img-fluid img-thumbnail" style="max-height: 80px; object-fit: cover;">';
		html += '</div>';
		html += '<div class="col-6">';
		html += '<h6 class="mb-1">' + data.titulo_principal + '</h6>';
		html += subTituloHtml;
		html += '</div>';
		html += '<div class="col-2 text-right">';
		html += '<button type="button" class="btn btn-sm btn-danger btn-remover-planta" data-id="' + data.id + '">';
		html += '<i class="fas fa-times"></i>';
		html += '</button>';
		html += '</div>';
		html += '</div>';
		html += '</div>';
		html += '</div>';
		html += '</div>';

		$('#plantas_lista').append(html);
		$('#plantas_empty').hide();
	}

	// Função para limpar formulário
	function limparFormularioPlanta() {
		$('#titulo_principal_planta').val('');
		$('#sub_titulo_planta').val('');
		$('#imagem_planta').val('');
		$('#planta_preview').html('<div class="text-muted"><i class="fas fa-image fa-3x mb-2"></i><br>Selecione uma imagem para visualizar</div>');
	}

	// Remover planta (delegação de eventos)
	$(document).on('click', '.btn-remover-planta', function() {
		var btn = $(this);
		var id = btn.data('id');
		var plantaItem = btn.closest('.planta-item');

		if (!confirm('Tem certeza que deseja remover esta planta?')) {
			return;
		}

		// Desabilitar botão
		btn.prop('disabled', true).html('<i class="fas fa-spinner fa-spin"></i>');

		// Requisição AJAX
		$.ajax({
			url: '{{ path('s_empreendimentos_remover_planta') }}',
			method: 'POST',
			data: {
				id: id
			},
			dataType: 'json',
			success: function(response) {
				if (response.success) {
					// Remover da lista com animação
					plantaItem.fadeOut(400, function() {
						$(this).remove();
						
						// Verificar se lista ficou vazia
						if ($('#plantas_lista .planta-item').length === 0) {
							$('#plantas_empty').show();
						}
					});
					
					// Mostrar sucesso
					showNotification('success', response.message);
				} else {
					alert('Erro: ' + response.message);
					btn.prop('disabled', false).html('<i class="fas fa-times"></i>');
				}
			},
			error: function(xhr, status, error) {
				console.error('Erro AJAX:', error);
				alert('Erro ao remover planta. Tente novamente.');
				btn.prop('disabled', false).html('<i class="fas fa-times"></i>');
			}
		});
	});

	}); // Fechamento da função principal $(function () {
	</script>
{% endblock script %}
